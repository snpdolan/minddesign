{"version":3,"sources":["actions/index.js","cache/index.js","components/Canvas.js","three.js","components/Shape.js","components/App.js","reducers/index.js","reducers/shapeReducer.js","reducers/canvasReducer.js","index.js"],"names":["updateDrawing","svgString","dispatch","axios","post","data","then","response","type","payload","catch","error","console","log","renderDrawing","queryObject","queryUrl","concat","queryString","fileString","extrude","length","get","CacheManager","writeData","key","localforage","setItem","readData","getItem","removeData","removeItem","clear","Canvas","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","sigPad","setState","svgDataURL","toDataURL","mySVG","state","split","atob","cache","_this2","react_default","a","createElement","className","build_default","ref","penColor","backgroundColor","canvasProps","width","height","minwidth","maxwidth","mindistance","throttle","onClick","Component","connect","timeStamp","bindActionCreators","window","THREE","require","scene","Scene","background","Color","threeWidth","threeHeight","helper","GridHelper","rotation","x","Math","PI","add","innerWidth","innerHeight","camera","PerspectiveCamera","position","set","renderer","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","setSize","OrbitControls","domElement","screenSpacePanning","group","loader","SVGLoader","link","STLExporter","document","style","display","body","appendChild","animate","requestAnimationFrame","render","onWindowResize","aspect","updateProjectionMatrix","clearThree","obj","children","remove","geometry","dispose","undefined","material","forEach","texture","arrayToPoints","array","removeZeroArray","filter","point","newArray","i","myPoint","Vector2","push","loadSVG","svgUrl","load","scalarSettings","paths","Group","extrudeSettings","depth","steps","bevelEnabled","bevelThickness","bevelSize","bevelSegments","y","scale","multiplyScalar","path","fillColor","userData","fill","MeshBasicMaterial","color","setStyle","opacity","fillOpacity","transparent","side","DoubleSide","depthWrite","shapes","toShapes","j","shape","ShapeBufferGeometry","mesh","Mesh","strokeColor","stroke","strokeMaterial","strokeOpacity","baseMaterial","wireframe","k","kl","subPaths","strokeGeometry","strokeMesh","threeDGeometry","subPath","pointsToStroke","getPoints","wirePoints","attributes","p","newGeometry","Shape","ExtrudeBufferGeometry","baseGeometry","CylinderBufferGeometry","cylinder","baseHeight","xhr","circle","mount","addEventListener","e","preventDefault","currentMesh","App","components_Shape","components_Canvas","rootReducer","combineReducers","arguments","Date","action","store","createStore","applyMiddleware","thunk","es","react_router_dom","Fragment","components_App","getElementById"],"mappings":"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","file":"static/js/main.4f5da18b.chunk.js","sourcesContent":["import axios from \"axios\";\r\nexport const SAVE_DRAWING = 'SAVE_DRAWING';\r\nexport const RENDER_DRAWING = 'RENDER_DRAWING';\r\n\r\nconst ROOT_URL = \"http://localhost:8000/\";\r\n\r\nexport const updateDrawing = (svgString) => dispatch => {\r\n  // console.log(svgString);\r\n  axios.post(`public/sig.svg`,{\r\n    data: svgString\r\n  }).then(function (response) {\r\n    // console.log(response);\r\n    dispatch({ type: SAVE_DRAWING, payload: response.data });\r\n  })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n};\r\n\r\nexport const renderDrawing = (queryObject) => dispatch => {\r\n  let queryUrl = `${ROOT_URL}?`;\r\n  let queryString = ``;\r\n  const { fileString, extrude } = queryObject;\r\n\r\n  if (fileString) {\r\n    queryString += `file=${fileString}&`\r\n  }\r\n\r\n  if (extrude) {\r\n    queryString += `extrude=${extrude}&`\r\n  }\r\n\r\n  if (queryString.length > 0) { queryUrl += queryString };\r\n  axios.get(queryUrl).then(function (response) {\r\n    console.log(response);\r\n    dispatch({ type: RENDER_DRAWING, payload: response.data });\r\n  })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n};","import localforage from 'localforage'\r\n\r\nexport default class CacheManager {\r\n\r\n  writeData = (key, data) => localforage.setItem(key, data)\r\n\r\n  readData = key => localforage.getItem(key)\r\n\r\n  removeData = key => localforage.removeItem(key)\r\n\r\n  clear = () => localforage.clear()\r\n}\r\n","import React, { Component } from 'react';\r\nimport { updateDrawing } from '../actions';\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport CacheManager from '../cache';\r\nimport SignatureCanvas from 'react-signature-canvas';\r\n\r\nclass Canvas extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.cache = new CacheManager();\r\n    this.state = { svgDataURL: null };\r\n    this.sigPad = {};\r\n  }\r\n\r\n\r\n  clear = () => {\r\n    this.sigPad.clear()\r\n  }\r\n\r\n  renderDrawing = () => {\r\n    this.setState({\r\n      svgDataURL: this.sigPad.toDataURL('image/svg+xml')\r\n    }, () => {\r\n        let mySVG = this.state.svgDataURL.split(',');\r\n        this.props.updateDrawing(atob(mySVG[1]));\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='container text-center'>\r\n        <div className='row'>\r\n          <div className='col-12'>\r\n            <SignatureCanvas\r\n              ref={(ref) => { this.sigPad = ref }}\r\n              penColor='black'\r\n              backgroundColor='rgb(255,255,255)'\r\n              canvasProps={{\r\n                width: 300,\r\n                height: 300,\r\n                minwidth: 30,\r\n                maxwidth: 35,\r\n                mindistance: 10,\r\n                throttle: 0,\r\n                // dotsize: 20,\r\n                className: 'sigCanvas mb-2'\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='col-12'>\r\n            \r\n              <button className='btn btn-secondary btn-lg mr-4' onClick={this.clear}>\r\n                Clear\r\n              </button>\r\n              <button className='btn btn-success btn-lg' onClick={this.renderDrawing}>\r\n                Render\r\n              </button>\r\n\r\n            {/* {this.state.svgDataURL ?\r\n              <img className='thumbnail' src={this.state.svgDataURL} />\r\n              : null} */}\r\n          </div>\r\n        </div>  \r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    // products: state.products,\r\n    timeStamp: state.timeStamp\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return bindActionCreators({ updateDrawing}, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Canvas);","import * as THREE from 'three';\r\n\r\nwindow.THREE = THREE; // THREE.NRRDLoader expects THREE to be a global object\r\nrequire('three/examples/js/loaders/SVGLoader');\r\nrequire('three/examples/js/controls/OrbitControls');\r\nrequire('three/examples/js/exporters/STLExporter.js');\r\nrequire('three/examples/js/libs/dat.gui.min.js');\r\n\r\nexport default window.THREE;","import React, { Component } from 'react';\r\nimport { renderDrawing } from '../actions';\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport THREE from \"../three\";\r\n\r\n// === THREE.JS CODE START ===\r\nvar scene = new THREE.Scene();\r\nscene.background = new THREE.Color(0xb0b0b0);\r\n\r\nvar helper = new THREE.GridHelper(160, 10);\r\nhelper.rotation.x = Math.PI / 2;\r\nscene.add(helper);\r\n// console.log(window);\r\n// var camera = new THREE.PerspectiveCamera(75, ((window.innerWidth * 0.5) - (window.innerWidth * 0.1)) / ((window.innerHeight * 0.5)), 0.1, 1000);\r\nvar threeWidth, threeHeight;\r\nif (window.innerWidth <= 768) {\r\n  threeWidth = ((window.innerWidth * 0.8));\r\n  threeHeight = ((window.innerHeight * 0.5));\r\n} else {\r\n  threeWidth = ((window.innerWidth * 0.37));\r\n  threeHeight = ((window.innerHeight * 0.5));\r\n}\r\nvar camera = new THREE.PerspectiveCamera(50, threeWidth / threeHeight, 1, 1000);\r\ncamera.position.set(0, 0, 200);\r\nvar renderer = new THREE.WebGLRenderer({ antialias: true });\r\nrenderer.setPixelRatio(window.devicePixelRatio);\r\nrenderer.setSize(threeWidth, threeHeight);\r\n//add in pan/view options\r\nvar controls = new THREE.OrbitControls(camera, renderer.domElement);\r\ncontrols.screenSpacePanning = true;\r\n\r\nvar guiData = {\r\n  currentURL: '/tiger.svg',\r\n  extrude: false\r\n};\r\n\r\n// instantiate a loader, exporter, and group\r\nvar loader = new THREE.SVGLoader();\r\nvar exporter = new THREE.STLExporter();\r\nvar group;\r\n\r\n//append a link, from our Three.js examples\r\nvar link = document.createElement('a');\r\nlink.style.display = 'none';\r\ndocument.body.appendChild(link);\r\n\r\n// console.log(loader);\r\nvar animate = function () {\r\n  requestAnimationFrame(animate);\r\n  renderer.render(scene, camera);\r\n};\r\n\r\nvar onWindowResize = function () {\r\n\r\n  if (window.innerWidth <= 768) {\r\n    threeWidth = ((window.innerWidth * 0.8));\r\n    threeHeight = ((window.innerHeight * 0.5));\r\n  } else {\r\n    threeWidth = ((window.innerWidth * 0.37));\r\n    threeHeight = ((window.innerHeight * 0.5));\r\n  }\r\n\r\n  camera.aspect = threeWidth / threeHeight;\r\n  camera.updateProjectionMatrix();\r\n  renderer.setSize(threeWidth, threeHeight);\r\n}\r\n\r\nvar clearThree = function (obj) {\r\n  while (obj.children.length > 1) {\r\n    clearThree(obj.children[(obj.children.length - 1)])\r\n    obj.remove(obj.children[(obj.children.length - 1)]);\r\n  }\r\n  if (obj.geometry) obj.geometry.dispose()\r\n  // console.log(obj.material)\r\n\r\n  if (obj.material !== undefined){\r\n    if (obj.material.length !== undefined) {\r\n      obj.material.forEach(material => {\r\n        material.dispose();\r\n      });\r\n    } else {\r\n      obj.material.dispose();\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  if (obj.texture) obj.texture.dispose()\r\n} \r\n\r\nvar exportASCII = function(meshGroup) {\r\n  var result = exporter.parse(meshGroup);\r\n  // let objectExtension = objectName + '.stl'\r\n  saveString(result, 'thing.stl');\r\n}\r\n\r\nvar exportBinary = function (meshGroup) {\r\n  var result = exporter.parse(meshGroup, { binary: true });\r\n  saveArrayBuffer(result, 'thing.stl');\r\n}\r\n\r\nvar saveString = function(text, filename) {\r\n  save(new Blob([text], { type: 'text/plain' }), filename);\r\n}\r\nvar saveArrayBuffer = function(buffer, filename) {\r\n  save(new Blob([buffer], { type: 'application/octet-stream' }), filename);\r\n}\r\n\r\nvar save = function (blob, filename) {\r\n  link.href = URL.createObjectURL(blob);\r\n  link.download = filename;\r\n  link.click();\r\n}\r\n\r\nconst arrayToPoints = function(array){\r\n  let removeZeroArray = array.filter(point => { return point !== 0 });  \r\n  let newArray = [];\r\n  for(var i = 0; i < removeZeroArray.length; i+=2){\r\n    let myPoint = new THREE.Vector2(removeZeroArray[i], removeZeroArray[i+1]);\r\n    newArray.push(myPoint);\r\n  }\r\n  return newArray;\r\n}\r\n\r\n// var gui;\r\n\r\n// const createGUI = function() {\r\n//   if (gui) gui.destroy();\r\n//   gui = new THREE.GUI({ width: 350 });\r\n//   gui.add(guiData, 'extrude').name('Extrude?').onChange(update);\r\n//   function update() {\r\n//     loadSVG(guiData.currentURL);\r\n//   }\r\n// }\r\n\r\nvar loadSVG = function (svgUrl, extrude){\r\n  // load a SVG resource\r\n  loader.load(\r\n    // resource URL\r\n    svgUrl,\r\n    // called when the resource is loaded\r\n    function (data) {\r\n\r\n      var paths = data.paths;\r\n      group = new THREE.Group();\r\n      var scalarSettings;\r\n      var extrudeSettings = {\r\n        depth: 6,\r\n        steps: 1,\r\n        bevelEnabled: false,\r\n        bevelThickness: 2,\r\n        bevelSize: 4,\r\n        bevelSegments: 1\r\n      };\r\n      if (extrude) {\r\n        \r\n        scalarSettings = 0.6;\r\n        group.position.x = -85;\r\n        group.position.y = 85;\r\n      } else {\r\n        scalarSettings = 0.25;\r\n        group.position.x = -70;\r\n        group.position.y = 70;\r\n      }\r\n\r\n      group.scale.multiplyScalar(scalarSettings);\r\n      \r\n      group.scale.y *= - 1;\r\n\r\n    //  console.log(group.scale);\r\n\r\n      for (var i = 0; i < paths.length; i++) {\r\n        //let's add our printing base here!\r\n        \r\n        var path = paths[i];\r\n        var fillColor = path.userData.style.fill;\r\n\r\n        if (fillColor !== undefined && fillColor !== 'none') {\r\n          var material = new THREE.MeshBasicMaterial({\r\n            color: new THREE.Color().setStyle(fillColor),\r\n            opacity: path.userData.style.fillOpacity,\r\n            transparent: path.userData.style.fillOpacity < 1,\r\n            side: THREE.DoubleSide,\r\n            depthWrite: false\r\n\r\n          });\r\n          var shapes = path.toShapes(true);\r\n          for (var j = 0; j < shapes.length; j++) {\r\n            var shape = shapes[j];\r\n            var geometry = new THREE.ShapeBufferGeometry(shape);\r\n            var mesh = new THREE.Mesh(geometry, material);\r\n            group.add(mesh);\r\n          }\r\n        }\r\n\r\n        var strokeColor = path.userData.style.stroke;\r\n        if (strokeColor !== undefined && strokeColor !== 'none') {\r\n          var strokeMaterial = new THREE.MeshBasicMaterial({\r\n            color: new THREE.Color().setStyle(strokeColor),\r\n            opacity: path.userData.style.strokeOpacity,\r\n            transparent: path.userData.style.strokeOpacity < 1,\r\n            side: THREE.DoubleSide,\r\n            depthWrite: false\r\n            // wireframe: true\r\n          });\r\n\r\n          //place cylinder and offsetting stroke material here\r\n          var baseMaterial = new THREE.MeshBasicMaterial({\r\n            color: 0x00ffff,\r\n            opacity: 0.3,\r\n            transparent: true,\r\n            side: THREE.DoubleSide,\r\n            depthWrite: false,\r\n            wireframe: false\r\n          });\r\n\r\n          for (var k = 0, kl = path.subPaths.length; k < kl; k++) {\r\n            var subPath = path.subPaths[k];\r\n            var strokeGeometry, strokeMesh, threeDGeometry;\r\n\r\n            if (extrude) {\r\n              if (k < path.subPaths.length) {\r\n                strokeGeometry = new THREE.SVGLoader.pointsToStroke(subPath.getPoints(), path.userData.style);\r\n                let wirePoints = arrayToPoints(strokeGeometry.attributes.position.array);\r\n                for (var p = 0; p < wirePoints.length; p += 3) {\r\n                  var newGeometry = new THREE.Shape([wirePoints[p], wirePoints[p + 1], wirePoints[p + 2]]);\r\n                  if (newGeometry) {\r\n                    threeDGeometry = new THREE.ExtrudeBufferGeometry(newGeometry, extrudeSettings);\r\n                    strokeMesh = new THREE.Mesh(threeDGeometry, strokeMaterial);\r\n                    group.add(strokeMesh);\r\n                  }\r\n                }\r\n              }\r\n\r\n              if (i === 0) {\r\n\r\n                var baseRadius = 135;\r\n                var baseHeight = 3;\r\n                var baseGeometry = new THREE.CylinderBufferGeometry(baseRadius, baseRadius, baseHeight, 64);\r\n                var cylinder = new THREE.Mesh(baseGeometry, [strokeMaterial, baseMaterial]);\r\n                cylinder.position.set(-(group.position.x * (1 + group.scale.x)) + baseHeight, (group.position.y * (1 - group.scale.y)) + baseHeight, baseHeight / 2);\r\n                cylinder.rotation.set(Math.PI / 2, 0, 0);\r\n                group.add(cylinder);\r\n              }\r\n            } \r\n            else {\r\n              if (k < path.subPaths.length ){\r\n                strokeGeometry = new THREE.SVGLoader.pointsToStroke(subPath.getPoints(), path.userData.style);\r\n                if (strokeGeometry) {\r\n                  strokeMesh = new THREE.Mesh(strokeGeometry, strokeMaterial);\r\n                  group.add(strokeMesh);\r\n                }\r\n              }\r\n            } \r\n          }\r\n\r\n          // console.log(group);\r\n          scene.add(group);\r\n        }\r\n      }\r\n\r\n      \r\n    },\r\n    // called when loading is in progresses\r\n    function (xhr) {\r\n      // console.log((xhr.loaded / xhr.total * 100) + '% loaded');\r\n\r\n    },\r\n    // called when loading has errors\r\n    function (error) {\r\n\r\n      console.log('An error happened');\r\n\r\n    }\r\n  );\r\n}\r\n\r\nclass Shape extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      circle: true\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    // // use ref as a mount point of the Three.js scene instead of the document.body\r\n    this.mount.appendChild(renderer.domElement);\r\n    // load a SVG resource\r\n    loadSVG('public/tiger.svg', false);\r\n    // this.props.renderDrawing({\r\n    //   fileString:'tiger', \r\n    //   extrude: 'flat'\r\n    // });\r\n    // scene.add(this.props.currentMesh);\r\n\r\n    window.addEventListener('resize', onWindowResize, false);\r\n    // createGUI();\r\n    animate();\r\n    // === THREE.JS EXAMPLE CODE END ===\r\n  }\r\n\r\n  componentDidUpdate(){\r\n  //  console.log(scene);\r\n    clearThree(scene);\r\n    loadSVG('public/sig.svg', true);\r\n    // this.props.renderDrawing({\r\n    //   fileString: 'sig',\r\n    //   extrude: 'extrude'\r\n    // });\r\n    // scene.add(this.props.currentMesh);\r\n    animate();\r\n   \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='container text-center'>\r\n        <div className='row'>\r\n          <div className='col-12'>\r\n            <button\r\n              className='btn btn-block btn-success mb-2'\r\n              onClick={e => {\r\n                e.preventDefault();\r\n                // exportBinary(group);\r\n              }}\r\n            >\r\n              Save As 3D Model\r\n            </button>\r\n            <div ref={ref => (this.mount = ref)} \r\n              \r\n            />\r\n            <button\r\n              className='btn btn-block btn-primary'\r\n              onClick={e => clearThree(scene)}\r\n            >\r\n              Clear Canvas\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    currentMesh: state.currentMesh,\r\n    timeStamp: state.timeStamp\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return bindActionCreators({ renderDrawing }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Shape);","import React, { Component } from 'react';\r\n// import {  } from '../actions';\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport Canvas from './Canvas';\r\nimport Shape from './Shape';\r\n\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className='container main-app'>\r\n        <div className='jumbotron text-center'>\r\n          <h1>Working Title</h1>\r\n        </div>\r\n        <div className='row mb-4'>\r\n          <div className='col-md-12 text-center'>\r\n            <p> We'll probably put some user info here?</p>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='col-12 col-md-6 mb-4'>\r\n            <Shape />\r\n          </div>\r\n          <div className='col-12 col-md-6 canvas text-center mb-5'>\r\n            <Canvas />\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='col-md-8 offset-md-1'>\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    // products: state.products,\r\n    // categories: state.categories\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return bindActionCreators({  }, dispatch);\r\n}\r\n\r\nexport default connect(null, null)(App);","import { combineReducers } from \"redux\";\r\nimport shapeReducer from \"./shapeReducer\";\r\nimport canvasReducer from './canvasReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  // products: ProductReducer,\r\n  timeStamp: canvasReducer,\r\n  currentMesh: shapeReducer\r\n});\r\n\r\nexport default rootReducer;","import CacheManager from '../cache'\r\nimport { RENDER_DRAWING } from \"../actions\";\r\nconst cache = new CacheManager();\r\n\r\nexport default function (state = {}, action) {\r\n  switch (action.type) {\r\n    case RENDER_DRAWING:\r\n      // let newState = {\r\n      //   ...state,\r\n      //   filters: [...state.filters, action.filter]\r\n      // }\r\n      // cache.writeData('state', newState)\r\n      let newMesh = action.payload.data;\r\n      return newMesh\r\n  default:\r\n    return state;\r\n  }\r\n}","import CacheManager from '../cache'\r\nimport { SAVE_DRAWING } from \"../actions\";\r\nconst cache = new CacheManager();\r\n\r\nexport default function (state = {}, action) {\r\n  switch (action.type) {\r\n    case SAVE_DRAWING:\r\n      // let newState = {\r\n      //   ...state,\r\n      //   filters: [...state.filters, action.filter]\r\n      // }\r\n      // cache.writeData('state', newState)\r\n      let newState = {timeStamp: new Date()}\r\n      return newState\r\n  default:\r\n    return state;\r\n  }\r\n}","import React, { Fragment } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { render } from \"react-dom\";\nimport App from './components/App';\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/index\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nconst store = createStore(rootReducer, {}, applyMiddleware(thunk));\n\nrender(\n  <Provider store={store}>\n    <Router>\n      <>\n        <App />\n      </>\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}