{"version":3,"sources":["components/Shape.js","reducers/authReducer.js","reducers/index.js","reducers/canvasReducer.js","reducers/shapeReducer.js","components/Navbar.js","components/Canvas.js","components/LandingPage.js","components/Signup.js","components/Signin.js","components/App.js","index.js","three.js","actions/index.js"],"names":["scene","THREE","Scene","background","Color","threeWidth","threeHeight","helper","GridHelper","rotation","x","Math","PI","add","window","innerWidth","innerHeight","camera","PerspectiveCamera","position","set","renderer","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","setSize","OrbitControls","domElement","screenSpacePanning","group","guiData","currentModel","extrude","loader","SVGLoader","exporter","STLExporter","link","document","createElement","style","display","body","appendChild","gui","animate","requestAnimationFrame","render","onWindowResize","aspect","updateProjectionMatrix","clearThree","obj","children","length","remove","geometry","dispose","undefined","material","forEach","texture","scaleGroup","meshGroup","scalar","scale","multiplyScalar","y","saveArrayBuffer","buffer","filename","save","Blob","type","blob","href","URL","createObjectURL","download","click","arrayToPoints","array","removeZeroArray","filter","point","newArray","i","myPoint","Vector2","push","createBasicMaterial","color","opacity","transparent","MeshBasicMaterial","setStyle","side","DoubleSide","depthWrite","loadSVG","svgUrl","load","data","paths","Group","extrudeSettings","depth","steps","bevelEnabled","bevelThickness","bevelSize","bevelSegments","extrudeBoolean","scalarSettings","includes","updateMatrixWorld","setInitialScale","path","fillColor","userData","fill","fillOpacity","shapes","toShapes","j","shape","ShapeBufferGeometry","mesh","Mesh","strokeColor","stroke","strokeMaterial","strokeOpacity","k","kl","subPaths","strokeGeometry","strokeMesh","threeDGeometry","subPath","pointsToStroke","getPoints","wirePoints","attributes","p","newGeometry","Shape","ExtrudeBufferGeometry","baseMaterial","materialArray","boxShape","BoxHelper","groupCenterX","boundingSphere","center","groupCenterY","baseShape","baseRadius","radius","baseGeometry","CylinderBufferGeometry","abs","baseHeight","createStampBase","xhr","error","console","log","props","_this","Object","C_Users_snpdo_code_final_project_api_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_snpdo_code_final_project_api_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_snpdo_code_final_project_api_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","createGUI","destroy","GUI","width","name","onChange","myURL","setState","state","saveSVG","publicUrl","circle","bind","C_Users_snpdo_code_final_project_api_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","renderDownloadButton","mount","prepend","addEventListener","_this2","react__WEBPACK_IMPORTED_MODULE_6___default","a","className","onClick","e","preventDefault","result","parse","binary","exportBinary","__dirname","_this3","alert","ref","Component","connect","timeStamp","dispatch","bindActionCreators","renderDrawing","getFile","INITIAL_STATE","authenticated","localStorage","getItem","email","errorMessage","rootReducer","combineReducers","auth","arguments","action","AUTH_USER","objectSpread","payload","token","AUTH_ERROR","form","formReducer","SAVE_DRAWING","GET_FILE","Date","file","actions","_ref","signout","handleSignOutClick","react_default","react_router_dom","to","Fragment","Canvas","classCallCheck","possibleConstructorReturn","getPrototypeOf","createRandomNumber","floor","random","createFileName","concat","clear","fileName","sigPad","svgDataURL","toDataURL","mySVG","split","updateDrawing","atob","fileNumber","assertThisInitialized","build_default","penColor","backgroundColor","canvasProps","height","minwidth","maxwidth","mindistance","throttle","LandingPage","components_Canvas","Signup","onSubmit","formProps","signup","history","handleSubmit","Field","placeholder","component","autoComplete","compose","reduxForm","Signin","signin","App","components_Navbar","react_router","exact","store","createStore","applyMiddleware","thunk","es","getElementById","three__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","require","r","__webpack_exports__","d","RENDER_DRAWING","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","n","callback","axios","post","then","response","setItem","catch","removeItem","svgString","get","open","queryObject","queryUrl","queryString","fileString"],"mappings":"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","file":"static/js/main.10b3131f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { renderDrawing, getFile } from '../actions';\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport THREE from \"../three\";\r\nimport { GUI } from 'three/examples/js/libs/dat.gui.min.js';\r\n\r\n// === THREE.JS CODE START ===\r\nvar scene = new THREE.Scene();\r\nscene.background = new THREE.Color(0xe0e0e0);\r\n\r\nvar helper = new THREE.GridHelper(160, 10);\r\nhelper.rotation.x = Math.PI / 2;\r\nscene.add(helper);\r\n// console.log(window);\r\n// var camera = new THREE.PerspectiveCamera(75, ((window.innerWidth * 0.5) - (window.innerWidth * 0.1)) / ((window.innerHeight * 0.5)), 0.1, 1000);\r\nvar threeWidth, threeHeight;\r\nif (window.innerWidth <= 768) {\r\n  threeWidth = ((window.innerWidth * 0.8));\r\n  threeHeight = ((window.innerHeight * 0.5));\r\n} else {\r\n  threeWidth = ((window.innerWidth * 0.37));\r\n  threeHeight = ((window.innerHeight * 0.5));\r\n}\r\nvar camera = new THREE.PerspectiveCamera(50, threeWidth / threeHeight, 1, 1000);\r\ncamera.position.set(0, 0, 200);\r\nvar renderer = new THREE.WebGLRenderer({ antialias: true });\r\nrenderer.setPixelRatio(window.devicePixelRatio);\r\nrenderer.setSize(threeWidth, threeHeight);\r\n//add in pan/view options\r\nvar controls = new THREE.OrbitControls(camera, renderer.domElement);\r\ncontrols.screenSpacePanning = true;\r\n\r\nvar guiData = {\r\n  currentModel: 'tiger.svg',\r\n  extrude: false\r\n};\r\n\r\n// instantiate a loader, exporter, and group\r\nvar loader = new THREE.SVGLoader();\r\nvar exporter = new THREE.STLExporter();\r\nvar group;\r\n\r\n//append a link, from our Three.js examples\r\nvar link = document.createElement('a');\r\nlink.style.display = 'none';\r\ndocument.body.appendChild(link);\r\n\r\n// console.log(loader);\r\nvar animate = function () {\r\n  requestAnimationFrame(animate);\r\n  renderer.render(scene, camera);\r\n};\r\n\r\nvar onWindowResize = function () {\r\n\r\n  if (window.innerWidth <= 768) {\r\n    threeWidth = ((window.innerWidth * 0.8));\r\n    threeHeight = ((window.innerHeight * 0.5));\r\n  } else {\r\n    threeWidth = ((window.innerWidth * 0.37));\r\n    threeHeight = ((window.innerHeight * 0.5));\r\n  }\r\n\r\n  camera.aspect = threeWidth / threeHeight;\r\n  camera.updateProjectionMatrix();\r\n  renderer.setSize(threeWidth, threeHeight);\r\n}\r\n\r\nvar clearThree = function (obj) {\r\n  while (obj.children.length > 1) {\r\n    clearThree(obj.children[(obj.children.length - 1)])\r\n    obj.remove(obj.children[(obj.children.length - 1)]);\r\n  }\r\n  if (obj.geometry) obj.geometry.dispose()\r\n  // console.log(obj.material)\r\n\r\n  if (obj.material !== undefined){\r\n    if (obj.material.length !== undefined) {\r\n      obj.material.forEach(material => {\r\n        material.dispose();\r\n      });\r\n    } else {\r\n      obj.material.dispose();\r\n    }\r\n  }\r\n  if (obj.texture) obj.texture.dispose()\r\n} \r\n\r\nvar scaleGroup = function(meshGroup, scalar){\r\n  meshGroup.scale.multiplyScalar(scalar);\r\n  //three.js faces \"away\" from our perspective, so update\r\n  meshGroup.scale.y *= - 1;\r\n}\r\n\r\nvar exportASCII = function(meshGroup) {\r\n  var result = exporter.parse(meshGroup);\r\n  // let objectExtension = objectName + '.stl'\r\n  saveString(result, 'thing.stl');\r\n}\r\nvar exportBinary = function (meshGroup) {\r\n  scaleGroup(meshGroup, 0.15);\r\n  meshGroup.updateMatrixWorld(true);\r\n  var result = exporter.parse(meshGroup, { binary: true });\r\n  saveArrayBuffer(result, 'thing.stl');\r\n  scaleGroup(meshGroup, 6.1);\r\n  meshGroup.updateMatrixWorld(true);\r\n}\r\n\r\nvar saveString = function(text, filename) {\r\n  save(new Blob([text], { type: 'text/plain' }), filename);\r\n}\r\nvar saveArrayBuffer = function(buffer, filename) {\r\n  save(new Blob([buffer], { type: 'application/octet-stream' }), filename);\r\n}\r\n\r\nvar save = function (blob, filename) {\r\n  link.href = URL.createObjectURL(blob);\r\n  link.download = filename;\r\n  link.click();\r\n}\r\n\r\nconst arrayToPoints = function(array){\r\n  let removeZeroArray = array.filter(point => { return point !== 0 });  \r\n  let newArray = [];\r\n  for(var i = 0; i < removeZeroArray.length; i+=2){\r\n    let myPoint = new THREE.Vector2(removeZeroArray[i], removeZeroArray[i+1]);\r\n    newArray.push(myPoint);\r\n  }\r\n  return newArray;\r\n}\r\n\r\nvar gui;\r\n\r\nconst setInitialScale = (extrudeBoolean, svgUrl) => {\r\n  var scalarSettings;\r\n\r\n  //select between true/false for extrude and check for remote sig file (v1 of app)\r\n  //v2 of app will take in remote url and not be concerned with naming\r\n  if (!svgUrl.includes('tiger')) {\r\n    scalarSettings = 0.6;\r\n    group.position.x = -85;\r\n    group.position.y = 85;\r\n  }\r\n  else {\r\n    scalarSettings = 0.25;\r\n    group.position.x = -70;\r\n    group.position.y = 70;\r\n  }\r\n\r\n  //update our overall group with determined settings\r\n  scaleGroup(group, scalarSettings);\r\n  // group.scale.y *= - 1;\r\n  //forces our transformations\r\n  group.updateMatrixWorld(true);\r\n}\r\n\r\nconst createStampBase = (extrude, shape, group, materialArray, svgUrl) => {\r\n  \r\n  var boxShape = new THREE.BoxHelper(group, 0xffff00);\r\n  let groupCenterX = boxShape.geometry.boundingSphere.center.x;\r\n  let groupCenterY = boxShape.geometry.boundingSphere.center.y;\r\n  \r\n  if(extrude && !svgUrl.includes('tiger')){\r\n    var baseShape;\r\n    if (shape === 'circle') {\r\n      var baseRadius = (1 / group.scale.x) * boxShape.geometry.boundingSphere.radius;\r\n      var baseHeight = 3;\r\n      var baseGeometry = new THREE.CylinderBufferGeometry(baseRadius, baseRadius, baseHeight, 64);\r\n      baseShape = new THREE.Mesh(baseGeometry, materialArray);\r\n      baseShape.position.set((1 / group.scale.x) * (Math.abs(group.position.x) + groupCenterX), -(1 / group.scale.y) * (Math.abs(group.position.y) - groupCenterY), baseHeight / 2);\r\n      baseShape.rotation.set(Math.PI / 2, 0, 0);\r\n      \r\n    } else if (shape === 'square'){\r\n      baseShape = new THREE.BoxHelper(group, 0xffff00);\r\n      \r\n    }\r\n\r\n    group.add(baseShape);\r\n    scene.updateMatrixWorld(true);\r\n  }\r\n}\r\n\r\nconst createBasicMaterial = (color, opacity, transparent) => {\r\n  let myMaterial = new THREE.MeshBasicMaterial({\r\n    color: new THREE.Color().setStyle(color),\r\n    opacity: opacity,\r\n    transparent: transparent,\r\n    side: THREE.DoubleSide,\r\n    depthWrite: false\r\n    // wireFrame: false\r\n\r\n  });\r\n\r\n  return myMaterial;\r\n}\r\n\r\nvar loadSVG = function (svgUrl, extrude){\r\n  // load a SVG resource\r\n  loader.load(\r\n    // resource URL\r\n    svgUrl,\r\n    // called when the resource is loaded\r\n    function (data) {\r\n\r\n      const paths = data.paths;\r\n      group = new THREE.Group();\r\n      \r\n      const extrudeSettings = {\r\n        depth: 7,\r\n        steps: 1,\r\n        bevelEnabled: false,\r\n        bevelThickness: 2,\r\n        bevelSize: 4,\r\n        bevelSegments: 1\r\n      };\r\n\r\n      setInitialScale(extrude, svgUrl);\r\n\r\n      for (let i = 0; i < paths.length; i++) {\r\n        //let's add our printing base here!\r\n        \r\n        const path = paths[i];\r\n        const fillColor = path.userData.style.fill;\r\n\r\n        if (fillColor !== undefined && fillColor !== 'none') {\r\n          const material = createBasicMaterial(fillColor, path.userData.style.fillOpacity, path.userData.style.fillOpacity < 1);\r\n\r\n          const shapes = path.toShapes(true);\r\n          for (let j = 0; j < shapes.length; j++) {\r\n            const shape = shapes[j];\r\n            const geometry = new THREE.ShapeBufferGeometry(shape);\r\n            const mesh = new THREE.Mesh(geometry, material);\r\n            group.add(mesh);\r\n          }\r\n        }\r\n\r\n        const strokeColor = path.userData.style.stroke;\r\n        if (strokeColor !== undefined && strokeColor !== 'none') {\r\n          var strokeMaterial = createBasicMaterial(strokeColor, path.userData.style.strokeOpacity, path.userData.style.strokeOpacity < 1);\r\n\r\n          for (let k = 0, kl = path.subPaths.length; k < kl; k++) {\r\n            const subPath = path.subPaths[k];\r\n            var strokeGeometry, strokeMesh, threeDGeometry;\r\n\r\n            if (extrude) {\r\n              if (k < path.subPaths.length) {\r\n                strokeGeometry = new THREE.SVGLoader.pointsToStroke(subPath.getPoints(), path.userData.style);\r\n                let wirePoints = arrayToPoints(strokeGeometry.attributes.position.array);\r\n                for (let p = 0; p < wirePoints.length; p += 3) {\r\n                  const newGeometry = new THREE.Shape([wirePoints[p], wirePoints[p + 1], wirePoints[p + 2]]);\r\n                  if (newGeometry) {\r\n                    threeDGeometry = new THREE.ExtrudeBufferGeometry(newGeometry, extrudeSettings);\r\n                    strokeMesh = new THREE.Mesh(threeDGeometry, strokeMaterial);\r\n                    group.add(strokeMesh);\r\n                  }\r\n                }\r\n              }\r\n            } \r\n            else {\r\n              if (k < path.subPaths.length ){\r\n                strokeGeometry = new THREE.SVGLoader.pointsToStroke(subPath.getPoints(), path.userData.style);\r\n                if (strokeGeometry) {\r\n                  strokeMesh = new THREE.Mesh(strokeGeometry, strokeMaterial);\r\n                  group.add(strokeMesh);\r\n                }\r\n              }\r\n            } \r\n          }\r\n\r\n          scene.add(group);\r\n        }\r\n      }\r\n\r\n      //place cylinder material here\r\n      var baseMaterial = createBasicMaterial(0x00ffff, 0.3, true);\r\n      //add our base helper with array of materials\r\n      createStampBase(extrude, 'circle', group, [strokeMaterial, baseMaterial], svgUrl)\r\n      // createStampBase(extrude, 'square', group, [strokeMaterial, baseMaterial], svgUrl)\r\n    },\r\n    // called when loading is in progresses\r\n    function (xhr) {\r\n      // console.log((xhr.loaded / xhr.total * 100) + '% loaded');\r\n\r\n    },\r\n    // called when loading has errors\r\n    function (error) {\r\n\r\n      console.log('An error happened');\r\n\r\n    }\r\n  );\r\n}\r\n\r\nclass Shape extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      circle: true,\r\n      extrude: false\r\n    }\r\n    this.createGUI = this.createGUI.bind(this);\r\n    this.saveSVG = this.saveSVG.bind(this);\r\n    this.renderDownloadButton = this.renderDownloadButton.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    // use ref as a mount point of the Three.js scene instead of the document.body\r\n    this.mount.appendChild(renderer.domElement);\r\n    clearThree(scene);\r\n    this.createGUI();\r\n    this.mount.prepend(gui.domElement);\r\n    // load a SVG resource\r\n    loadSVG('public/tiger.svg', false);\r\n    // this.props.renderDrawing({\r\n    //   fileString:'tiger', \r\n    //   extrude: 'flat'\r\n    // });\r\n    // scene.add(this.props.currentMesh);\r\n\r\n    window.addEventListener('resize', onWindowResize, false);\r\n    \r\n    animate();\r\n\r\n    \r\n    // === THREE.JS EXAMPLE CODE END ===\r\n  }\r\n\r\n  createGUI = () => {\r\n    const update = () => {\r\n      clearThree(scene);\r\n      let myURL = 'public/' + this.props.currentModel;\r\n      // console.log(myURL);\r\n      this.setState({extrude: !this.state.extrude}, () => {\r\n        loadSVG(myURL, this.state.extrude);\r\n      })\r\n      \r\n    }\r\n\r\n    if (gui) gui.destroy();\r\n    gui = new GUI({ width: 150 });\r\n    // var f1 = gui.addFolder('Flow Field');\r\n    // const model = this.props.currentModel;\r\n    gui.add(guiData, 'extrude').name('Extrude?').onChange(update);\r\n    // scene.add(gui);\r\n    // gui.add(guiData, 'extrude').name('Extrude?').onChange(update);\r\n    // f1.open();  \r\n}\r\n\r\n  componentDidUpdate(){\r\n    // console.log(this.props.currentModel);\r\n    let publicUrl = 'public/' + this.props.currentModel;\r\n    clearThree(scene);\r\n    loadSVG(publicUrl, this.state.extrude);\r\n    // this.props.renderDrawing({\r\n    //   fileString: 'sig',\r\n    //   extrude: 'extrude'\r\n    // });\r\n    // scene.add(this.props.currentMesh);\r\n    \r\n    animate();\r\n   \r\n  }\r\n\r\n  renderDownloadButton(extrudeBoolean){\r\n    return extrudeBoolean ?\r\n      <button\r\n        className='btn btn-block btn-primary mb-2'\r\n        onClick={e => {\r\n          e.preventDefault();\r\n          // alert('Feature not live yet! \\n Check back in on Demo Night.');\r\n          // this.saveSVG();\r\n          exportBinary(group);\r\n        }}\r\n      >\r\n        Download As STL\r\n                </button>\r\n      :\r\n      <button\r\n        className='btn btn-block btn-primary mb-2'\r\n        onClick={e => {\r\n          e.preventDefault();\r\n          // alert('Feature not live yet! \\n Check back in on Demo Night.');\r\n          console.log(__dirname);\r\n          // this.props.getFile(this.props.currentModel);\r\n          this.saveSVG();\r\n        }}\r\n      >\r\n        Download As SVG\r\n                </button>\r\n  }\r\n\r\n  saveSVG = function () {\r\n    let publicUrl = 'download/' + this.props.currentModel;\r\n    link.href = publicUrl;\r\n    link.download = 'myDesign.svg';\r\n    link.click();\r\n  } \r\n\r\n  render() {\r\n    return (\r\n      <div className='container text-center'>\r\n        <div className='row'>\r\n          <div className='col-12'>\r\n            <div className='row'>\r\n              <div className='col-6'>\r\n                {this.renderDownloadButton(this.state.extrude)}\r\n              </div>\r\n              <div className='col-6'>\r\n                <button\r\n                  className='btn btn-block btn-success mb-2'\r\n                  onClick={e => {\r\n                    e.preventDefault();\r\n                    alert('Feature not live yet! \\n Check back in on Demo Night.')\r\n                    // exportBinary(group);\r\n                  }}\r\n                >\r\n                  Save My Design\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <div ref={ref => (this.mount = ref)} \r\n              \r\n            />\r\n            <button\r\n              className='btn btn-block btn-secondary'\r\n              onClick={e => clearThree(scene)}\r\n            >\r\n              Clear Canvas\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    currentModel: state.currentModel,\r\n    timeStamp: state.timeStamp\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return bindActionCreators({ renderDrawing, getFile }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Shape);","import { AUTH_USER, AUTH_ERROR } from '../actions';\r\n\r\nconst INITIAL_STATE = {\r\n  authenticated: localStorage.getItem('token') || '',\r\n  email: localStorage.getItem('email') || '',\r\n  errorMessage: ''\r\n};\r\n\r\nexport default function (state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case AUTH_USER:\r\n      return {\r\n        ...state, authenticated: action.payload.token,\r\n        email: action.payload.email\r\n      };\r\n    case AUTH_ERROR:\r\n      return { ...state, errorMessage: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\nimport shapeReducer from \"./shapeReducer\";\r\nimport canvasReducer from './canvasReducer';\r\nimport authReducer from './authReducer';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  timeStamp: canvasReducer,\r\n  currentModel: shapeReducer,\r\n  \r\n});\r\n\r\nexport default rootReducer;","import { SAVE_DRAWING, GET_FILE } from \"../actions\";\r\n\r\nexport default function (state = {}, action) {\r\n  switch (action.type) {\r\n    case SAVE_DRAWING:\r\n      // let newState = {\r\n      //   ...state,\r\n      //   filters: [...state.filters, action.filter]\r\n      // }\r\n      // cache.writeData('state', newState)\r\n      let newState = {timeStamp: new Date()}\r\n      return newState\r\n    case GET_FILE:\r\n      let someState = { timeStamp: new Date() }\r\n      return someState\r\n  default:\r\n    return state;\r\n  }\r\n}","import { SAVE_DRAWING } from \"../actions\";\r\n\r\nexport default function (state = 'tiger.svg', action) {\r\n  switch (action.type) {\r\n    case SAVE_DRAWING:\r\n      // let newState = {\r\n      //   ...state,\r\n      //   filters: [...state.filters, action.filter]\r\n      // }\r\n      // cache.writeData('state', newState)\r\n      // console.log(action)\r\n      \r\n      return action.payload.file\r\n  default:\r\n    return state;\r\n  }\r\n}","import React from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions';\r\n\r\nconst Navbar = ({ authenticated, email, signout }) => {\r\n  \r\n  const handleSignOutClick = () => {\r\n    signout();\r\n  };\r\n\r\n  const renderLinks = () => {\r\n    if (authenticated) {\r\n      return (\r\n        <>\r\n          <li className='nav-item mr-3'>{email}</li>\r\n          <li className='nav-item'>\r\n            <button\r\n              onClick={handleSignOutClick}\r\n              className='btn btn-md btn-info'\r\n            >\r\n              Sign Out\r\n            </button>\r\n          </li>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <li className='nav-item mx-2'><Link to=\"/signup\" className='btn btn-sm btn-primary'>Sign Up</Link></li>\r\n          <li className='nav-item mx-2'><Link to=\"/signin\" className='btn btn-sm btn-success'>Sign In</Link></li>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <nav className=\"navbar fixed-top navbar-dark bg-dark align-middle text-align-middle\">\r\n      <NavLink className=\"navbar-brand\" to=\"/\">MindDesign</NavLink>\r\n      {/* <form class=\"form-inline\">\r\n            <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search Designs\" aria-label=\"Search\" ></input>\r\n            <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n          </form> */}\r\n      <div className=\"\">\r\n        <ul className=\"navbar-nav mr-2\">\r\n          {renderLinks()}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    authenticated: state.auth.authenticated,\r\n    email: state.auth.email\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(Navbar);\r\n","import React, { Component } from 'react';\r\nimport { updateDrawing, getFile } from '../actions';\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport SignatureCanvas from 'react-signature-canvas';\r\n\r\nclass Canvas extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { svgDataURL: null, fileNumber: null };\r\n    this.sigPad = {};\r\n    this.createRandomNumber = this.createRandomNumber.bind(this);\r\n    this.createFileName = this.createFileName.bind(this);\r\n  }\r\n\r\n  createRandomNumber = () => { return Math.floor(Math.random() * 10000000) }\r\n\r\n  createFileName = () => {\r\n    let currentFile;\r\n    if (this.props.auth.authenticated) {\r\n      currentFile = `${this.props.auth.email}-${this.createRandomNumber()}.svg`;\r\n    } else {\r\n      currentFile = `guest-${this.createRandomNumber()}.svg`\r\n    }\r\n\r\n    return currentFile;\r\n  }\r\n\r\n  componentDidMount(){\r\n\r\n    this.setState({fileName: this.createFileName()})\r\n  }\r\n\r\n  \r\n\r\n  clear = () => {\r\n    this.setState({ fileName: this.createFileName()}, () => {\r\n      this.sigPad.clear();\r\n    })\r\n  }\r\n\r\n  renderDrawing = () => {\r\n        \r\n    this.setState({\r\n      svgDataURL: this.sigPad.toDataURL('image/svg+xml')\r\n    }, () => {\r\n        let mySVG = this.state.svgDataURL.split(',');\r\n        this.props.updateDrawing(this.state.fileName, atob(mySVG[1]));\r\n        // this.props.setFile(this.state.fileName);\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='container text-center justify-content-center'>\r\n        <div className='row'>\r\n          <div className='col-12'>\r\n            <h3 className='text-center justify-content-center'>Start Sketching:</h3>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          \r\n          <div className='col-12'>\r\n            <SignatureCanvas\r\n              ref={(ref) => { this.sigPad = ref }}\r\n              penColor='black'\r\n              backgroundColor='rgb(255,255,255)'\r\n              canvasProps={{\r\n                width: 300,\r\n                height: 300,\r\n                minwidth: 30,\r\n                maxwidth: 35,\r\n                mindistance: 10,\r\n                throttle: 0,\r\n                // dotsize: 20,\r\n                className: 'sigPad mt-4'\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        {/* <div className='row'>\r\n          <div className='col-6'> */}\r\n            <button className='btn btn-secondary btn-lg mr-2' onClick={this.clear}>\r\n              Clear Pad\r\n            </button>\r\n          {/* </div>\r\n          <div className='col-6'> */}\r\n            <button className='btn btn-success btn-lg' onClick={this.renderDrawing}>\r\n              Draw To Canvas\r\n            </button>\r\n          \r\n        </div>  \r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    auth: state.auth,\r\n    timeStamp: state.timeStamp\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return bindActionCreators({ updateDrawing, getFile }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Canvas);","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Shape from './Shape';\r\nimport Canvas from './Canvas';\r\n\r\nconst LandingPage = () => {\r\n  return (\r\n    <>\r\n      <div className='row'>\r\n        <div className='col-md-12 text-center'>\r\n\r\n          <div className='jumbotron mt-2'>\r\n            <h1>Hello, User</h1>\r\n            <p> We'll probably put some user info here? <i className=\"fas fa-crown\"></i></p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='row'>\r\n        <div className='col-12 col-md-6 mb-4'>\r\n          <Shape />\r\n        </div>\r\n        <div className='col-12 col-md-6 canvas text-center mb-5'>\r\n          <Canvas />\r\n        </div>\r\n      </div>\r\n      <div className='row'>\r\n        <div className='col-md-8 offset-md-1'>\r\n          {/* let's place some extra content here */}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LandingPage;","import React, { Component } from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions';\r\n\r\nclass Signup extends Component {\r\n  onSubmit = formProps => {\r\n    this.props.signup(formProps, () => {\r\n      this.props.history.push('/');\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { handleSubmit } = this.props;\r\n\r\n    return (\r\n      <>\r\n      <div className='row'>\r\n          <div className='col-10 offset-1 mt-4'>\r\n          <form onSubmit={handleSubmit(this.onSubmit)}>\r\n            <fieldset className='form-group'>\r\n              <label>Name</label>\r\n              <Field\r\n                name=\"name\"\r\n                type=\"text\"\r\n                placeholder=\"What's your handle?\"\r\n                component=\"input\"\r\n                autoComplete=\"none\"\r\n                className='form-control'\r\n              />\r\n            </fieldset>\r\n            <fieldset className='form-group'>\r\n              <label>Email</label>\r\n              <Field\r\n                name=\"email\"\r\n                type=\"text\"\r\n                placeholder=\"rick@councilofricks.singularity\"\r\n                component=\"input\"\r\n                autoComplete=\"none\"\r\n                className='form-control'\r\n              />\r\n            </fieldset>\r\n            <fieldset className='form-group'>\r\n              <label>Password</label>\r\n              <Field\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"Anything but 'password'...\"\r\n                component=\"input\"\r\n                autoComplete=\"none\"\r\n                className='form-control'\r\n              />\r\n            </fieldset>\r\n            <div>{this.props.errorMessage}</div>\r\n            <button className='btn btn-lg btn-outline-success'>Sign Up!</button>\r\n          </form>\r\n          </div>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { errorMessage: state.auth.errorMessage };\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, actions),\r\n  reduxForm({ form: 'signup' })\r\n)(Signup);\r\n","import React, { Component } from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions';\r\n\r\nclass Signin extends Component {\r\n  onSubmit = formProps => {\r\n    this.props.signin(formProps, () => {\r\n      this.props.history.push('/');\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { handleSubmit } = this.props;\r\n\r\n    return (\r\n      <div className='container'>\r\n        <div className='row'>\r\n           <div className='col-10 offset-1 mt-4'>\r\n            <form onSubmit={handleSubmit(this.onSubmit)}>\r\n              <fieldset className='form-group'>\r\n                <label>Email</label>\r\n                <Field\r\n                  name=\"email\"\r\n                  placeholder=\"root@eruditorum.org\"\r\n                  type=\"text\"\r\n                  component=\"input\"\r\n                  autoComplete=\"none\"\r\n                  className='form-control'\r\n                />\r\n              </fieldset>\r\n              <fieldset className='form-group'>\r\n                <label>Password</label>\r\n                <Field\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  component=\"input\"\r\n                  autoComplete=\"none\"\r\n                  className='form-control'\r\n                />\r\n              </fieldset>\r\n              <div>{this.props.errorMessage}</div>\r\n              <button className='btn btn-lg btn-outline-primary'>Sign In!</button>\r\n            </form>\r\n           </div>\r\n        </div>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { errorMessage: state.auth.errorMessage };\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, actions),\r\n  reduxForm({ form: 'signin' })\r\n)(Signin);\r\n","import React, { Component } from 'react';\r\nimport {Switch, Route, Redirect } from 'react-router-dom';\r\nimport {  } from '../actions';\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport Navbar from './Navbar';\r\nimport LandingPage from './LandingPage';\r\nimport Signup from './Signup';\r\nimport Signin from './Signin';\r\n\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <>\r\n        <Navbar />\r\n        <div className='container main-app'>\r\n          <Switch>\r\n            <Route exact path='/' component={LandingPage} />\r\n            <Route exact path='/signin' component={Signin} />\r\n            <Route exact path='/signup' component={Signup} />\r\n            <Redirect to='/signin' />\r\n          </Switch>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    auth: state.auth\r\n    // categories: state.categories\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return bindActionCreators({ }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(App);","import React from 'react';\nimport { BrowserRouter, Switch, Route, Redirect  } from 'react-router-dom';\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/index\";\n\nimport App from './components/App';\nimport Signin from './components/Signin';\nimport Signup from './components/Signup';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\nimport './index.css';\n\nconst store = createStore(rootReducer, {}, applyMiddleware(thunk));\n\nrender(\n  <Provider store={store}>\n    < BrowserRouter>\n      <Switch>\n        <Route path=\"/\" component={App} />\n        \n        {/* <Redirect to='/' /> */}\n      </Switch>\n    </ BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);","import * as THREE from 'three';\r\n\r\nwindow.THREE = THREE; // THREE.NRRDLoader expects THREE to be a global object\r\nrequire('three/examples/js/loaders/SVGLoader');\r\nrequire('three/examples/js/controls/OrbitControls');\r\nrequire('three/examples/js/exporters/STLExporter.js');\r\nrequire('three/examples/js/libs/dat.gui.min.js');\r\n\r\nexport default window.THREE;","import axios from \"axios\";\r\nexport const SAVE_DRAWING = 'SAVE_DRAWING';\r\nexport const GET_FILE = 'GET_FILE';\r\nexport const RENDER_DRAWING = 'RENDER_DRAWING';\r\nexport const AUTH_USER = 'AUTH_USER'\r\nexport const AUTH_ERROR = 'AUTH_ERROR'\r\n\r\nconst ROOT_URL = \"http://localhost:8000/\";\r\n\r\nexport const signup = (formProps, callback) => dispatch => {\r\n  axios.post(\r\n    'auth/signup',\r\n    formProps\r\n  ).then(function (response) {\r\n    dispatch({ type: AUTH_USER, payload: response.data });\r\n    localStorage.setItem('token', response.data.token);\r\n    localStorage.setItem('email', response.data.email);\r\n    callback();\r\n  })\r\n    .catch(function (error) {\r\n      dispatch({ type: AUTH_ERROR, payload: 'Email in use' });\r\n    });\r\n};\r\n\r\nexport const signin = (formProps, callback) => dispatch => {\r\n  axios.post(\r\n    'auth/signin',\r\n    formProps\r\n  ).then(function (response) {\r\n    dispatch({ type: AUTH_USER, payload: response.data });\r\n    localStorage.setItem('token', response.data.token);\r\n    localStorage.setItem('email', response.data.email);\r\n    callback();\r\n  })\r\n    .catch(function (error) {\r\n      dispatch({ type: AUTH_ERROR, payload: 'Email in use' });\r\n    });\r\n};\r\n\r\nexport const signout = () => {\r\n  localStorage.removeItem('token');\r\n  localStorage.removeItem('email');\r\n\r\n  return {\r\n    type: AUTH_USER,\r\n    payload: ''\r\n  };\r\n};\r\n\r\nexport const updateDrawing = (fileName, svgString) => dispatch => {\r\n  // console.log(svgString);\r\n  axios.post(`public/${fileName}`,{\r\n    data: svgString\r\n  }).then(function (response) {\r\n    // console.log(response);\r\n    dispatch({ type: SAVE_DRAWING, payload: response.data });\r\n  })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n};\r\n\r\nexport const getFile = (fileName) => dispatch => {\r\n  axios.get(`download/${fileName}`)\r\n    .then(function(response){\r\n      console.log(response);\r\n      window.open(response.file);\r\n      dispatch({ type: GET_FILE, payload: response })\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nexport const renderDrawing = (queryObject) => dispatch => {\r\n  let queryUrl = `${ROOT_URL}?`;\r\n  let queryString = ``;\r\n  const { fileString, extrude } = queryObject;\r\n\r\n  if (fileString) {\r\n    queryString += `file=${fileString}&`\r\n  }\r\n\r\n  if (extrude) {\r\n    queryString += `extrude=${extrude}&`\r\n  }\r\n\r\n  if (queryString.length > 0) { queryUrl += queryString };\r\n  axios.get(queryUrl).then(function (response) {\r\n    console.log(response);\r\n    dispatch({ type: RENDER_DRAWING, payload: response.data });\r\n  })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n};"],"sourceRoot":""}